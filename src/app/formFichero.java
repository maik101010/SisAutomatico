package app;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

/**
 *
 * @author Michael Garc√≠a A
 */
public class formFichero extends javax.swing.JFrame {

    String patch = "";
    String numeroBean = "";
    String numeroMes = "";
    String numeroAnio = "";
    int i = 0;
    int contTarjeta = 0;
    int totalContTarjetas = 0;

    /**
     * Creates new form formFichero
     */
    public formFichero() {
        initComponents();
        mostrarTabla("");
    }

    private void mostrarTabla(String numero) {

        //ArrayList<Persona> ad = p.consultarPersona();
        DefaultTableModel miJTable = (DefaultTableModel) jTableTarjeta.getModel();

        miJTable.setNumRows(i);
        i++;
        String dato[] = new String[1];

        dato[0] = String.valueOf(numero);
        miJTable.addRow(dato);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnRun = new javax.swing.JButton();
        btnSeleccionar = new javax.swing.JButton();
        jLabel = new javax.swing.JLabel();
        btnRun1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTarjeta = new javax.swing.JTable();
        jLabelNumeroTarjetas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        btnRun.setBackground(new java.awt.Color(255, 255, 255));
        btnRun.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnRun.setText("Run");
        btnRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRunActionPerformed(evt);
            }
        });

        btnSeleccionar.setBackground(new java.awt.Color(255, 255, 255));
        btnSeleccionar.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnSeleccionar.setText("Seleccionar Archivo");
        btnSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarActionPerformed(evt);
            }
        });

        jLabel.setForeground(new java.awt.Color(51, 51, 255));

        btnRun1.setBackground(new java.awt.Color(255, 255, 255));
        btnRun1.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        btnRun1.setText("Stop");
        btnRun1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRun1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRun, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(btnRun1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(btnSeleccionar)))
                .addGap(45, 45, 45))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRun)
                    .addComponent(btnSeleccionar)
                    .addComponent(btnRun1))
                .addGap(18, 18, 18)
                .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jTableTarjeta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tarjeta"
            }
        ));
        jTableTarjeta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTarjetaMouseClicked(evt);
            }
        });
        jTableTarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableTarjetaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTarjeta);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelNumeroTarjetas, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelNumeroTarjetas, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarActionPerformed
        try {
            JFileChooser buscaArchivo = new JFileChooser();
            buscaArchivo.showOpenDialog(buscaArchivo);
            patch = buscaArchivo.getSelectedFile().getAbsolutePath();
            jLabel.setText(patch);
        } catch (java.lang.NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Error " + e.getMessage());
        }
    }//GEN-LAST:event_btnSeleccionarActionPerformed

    private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
        System.setProperty("webdriver.chrome.driver", "chromedriver.exe");
        ChromeOptions options = new ChromeOptions();
        options.addArguments("start-maximized");
        options.addArguments("disable-infobars");

        WebDriver driver;
        try {
            driver = new ChromeDriver(options);

            try {
                /*
                    Llamamos al metodo que recorre los componentes principales
                 */
                runAuto(driver);

                String cadena;
                FileReader file = new FileReader(patch);
                BufferedReader b = new BufferedReader(file);

                boolean valor = true;
                do {

                    while ((cadena = b.readLine()) != null) {
                        System.out.println(cadena);

                        for (int i = 0; i < cadena.length(); i++) {
                            numeroBean = cadena.substring(0, 16);
                            numeroMes = cadena.substring(17, 19);
                            numeroAnio = cadena.substring(20, 24);

                        }
                        totalContTarjetas++;
                        jLabelNumeroTarjetas.setText("Total tarjetas evaluadas: " + totalContTarjetas);

                        Thread.sleep(3000);
                        WebElement number = driver.findElement(By.name("number"));
                        number.sendKeys(numeroBean);
                        WebElement mes = driver.findElement(By.name("expMonth"));
                        Select selectMes = new Select(mes);
                        selectMes.selectByValue(numeroMes);
                        WebElement anio = driver.findElement(By.name("expYear"));
                        Select selectAnio = new Select(anio);
                        selectAnio.selectByValue(numeroAnio);
                        Thread.sleep(3000);
                        number.sendKeys(Keys.ENTER);
                        Thread.sleep(3000);
                        //WebElement buttonCompra = driver.findElement(By.xpath("//BUTTON[@class='sb-button-1 sb-button-1--primary chk-proceed-btn right'][text()='Place Order'][text()='Place Order']/self::BUTTON"));
                        WebElement buttonCompra = (new WebDriverWait(driver, 20).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//BUTTON[@class='sb-button-1 sb-button-1--primary chk-proceed-btn right'][text()='Place Order'][text()='Place Order']/self::BUTTON"))));
                        buttonCompra.click();
                        Thread.sleep(3000);
                        /*
                            Validamos que el elemento este visible y se haya cargado
                        */

                        //WebElement modal = (new WebDriverWait(driver, 20).until(ExpectedConditions.visibilityOfElementLocated(By.id("modal-generic-error"))));
                        WebElement modal = driver.findElement(By.id("modal-generic-error"));
                        System.out.println("Elemento modal error: " + modal.toString());
                        valor = modal.isDisplayed();
                        System.out.println("Valor modal: " + valor);
                        /*
                            Si el modal esta, cerrar y ejecutar los siguientes pasos para volver al bucle de las tarjetas
                         */
                        if (valor) {
                            Thread.sleep(2000);
                            WebElement modalClose = driver.findElement(By.className("close"));
                            modalClose.click();
                            Thread.sleep(2000);
                            WebElement editeTarjet = (new WebDriverWait(driver, 10).until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//A[@href='#'][text()='EDIT']/self::A"))));
                            editeTarjet.click();

                            Thread.sleep(2000);
                            WebElement addediteTarjet = driver.findElement(By.className("chk-pay-opt--new"));
                            addediteTarjet.click();

                            Thread.sleep(2000);
                            WebElement checkoutForm = driver.findElement(By.xpath("//INPUT[@class='chk-pay-match-addr']/self::INPUT"));
                            Thread.sleep(2000);
                            checkoutForm.click();
                            contTarjeta++;

                            /*
                                Refrezcar la pagina despu√©s de 9 tarjetas
                             */
                            if (contTarjeta > 9) {
                                driver.navigate().refresh();
                                System.out.println("----------Refrezcando navegador----------");
                                Thread.sleep(4000);
                                contTarjeta = 0;
                            }

                        } else {
                            Clip sonido = AudioSystem.getClip();
                            File a = new File("sonidoburro.wav");
                            sonido.open(AudioSystem.getAudioInputStream(a));
                            sonido.start();
                            Thread.sleep(2000);
                            sonido.start();
                            JTextArea ta = new JTextArea(5, 5);
                            ta.setText(numeroBean);
                            JOptionPane.showMessageDialog(null, ta, "Tarjeta", JOptionPane.INFORMATION_MESSAGE);
                            System.out.println("Tarjeta es " + numeroBean);
                            mostrarTabla(numeroBean);
                            driver.manage().deleteAllCookies();
                            Thread.sleep(4000);
                            /*
                                Llamamos al metodo que recorre los componentes principales
                            */
                            runAuto(driver);

                        }
                    }
                    if (b.readLine() == null) {
                        JOptionPane.showMessageDialog(null, "Termino el archivo, por favor seleccione otro");
                        break;

                    }
                } while (valor);

            } catch (WebDriverException e) {
                JOptionPane.showMessageDialog(null, "Excepcion dentro de los parametros tarjeta");
                JOptionPane.showMessageDialog(null, e.getMessage());

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Excepcion dentro del driver" + e.getMessage());
            JOptionPane.showMessageDialog(null, e.getStackTrace());

        }
    }

    /*
        Metodo que ejecuta todos los componentes principales de la pagina
     */
    private static void runAuto(WebDriver driver) {
        try {
            driver.get("https://www.shoes.com/johnston-murphy-performance-loafer/614421/1262220");
            /*
                    Bot√≥n agregar compra
             */
            WebElement button = driver.findElement(By.id("add-cart"));
            button.click();

            /*
                    Bot√≥n checkout
             */
            Thread.sleep(2000);
            WebElement buttonCheckout = driver.findElement(By.className("crt-proceed-btn"));
            Thread.sleep(2000);
            buttonCheckout.click();
            /*
                    Formulario de email
             */
            Thread.sleep(3000);
            WebElement email = driver.findElement(By.name("guestEmail"));
            Random aleatorio = new Random();
            int intAletorio = aleatorio.nextInt(10000);
            email.sendKeys("Anonimo" + intAletorio + "@gmail.com");
            Thread.sleep(3000);
            email.sendKeys(Keys.ENTER);
            /*
                    Formulario de registro de datos
             */
            Thread.sleep(3000);
            WebElement firsName = driver.findElement(By.name("firstName"));
            firsName.sendKeys("Pepito");

            WebElement lastName = driver.findElement(By.name("lastName"));
            lastName.sendKeys("Perez");
            /*
                Se agregan las direcciones
            */
            //String[] direcciones = {"Transilvania 45", "Manzana 2, casa 4", "Otra direccion", "Super manzana 1", "Super dos", "Avenida siempre viva 12222", "Otra direccion rara", "Carrera 123 avenida 2", "Carrera 344 casa1", "avenida 234 carrera 4"};
            int direccion = aleatorio.nextInt(10);
            WebElement address1 = driver.findElement(By.name("address1"));
            address1.sendKeys("Ninguna 1");

            WebElement address2 = driver.findElement(By.name("address2"));
            address2.sendKeys("Ninguna 2");

            WebElement city = driver.findElement(By.name("city"));
            city.sendKeys("San diego");

            WebElement stateProvince = driver.findElement(By.name("stateProvince"));
            Select selectState = new Select(stateProvince);
            selectState.selectByValue("CA");

            WebElement postalCode = driver.findElement(By.name("postalCode"));
            postalCode.sendKeys("90001");

            WebElement phoneNumber = driver.findElement(By.name("phoneNumber"));
            
            phoneNumber.sendKeys("12341"+direccion+"9381");

            phoneNumber.sendKeys(Keys.ENTER);
            Thread.sleep(3000);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Excepcion dentro de los parametros formulario " + e.getMessage());
            JOptionPane.showMessageDialog(null, e.getLocalizedMessage());
        }


    }//GEN-LAST:event_btnRunActionPerformed

    private void jTableTarjetaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTarjetaMouseClicked
        // TODO add your handling code here:
        //System.out.println(id_persona);
    }//GEN-LAST:event_jTableTarjetaMouseClicked

    private void jTableTarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableTarjetaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableTarjetaKeyPressed

    private void btnRun1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRun1ActionPerformed
        // TODO add your handling code here:
        Runtime.getRuntime().exit(0);
    }//GEN-LAST:event_btnRun1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(formFichero.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(formFichero.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(formFichero.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(formFichero.class.getName()).log(Level.SEVERE, null, ex);
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formFichero().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRun;
    private javax.swing.JButton btnRun1;
    private javax.swing.JButton btnSeleccionar;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabelNumeroTarjetas;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableTarjeta;
    // End of variables declaration//GEN-END:variables
}
